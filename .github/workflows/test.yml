name: Run unit tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ^1.20
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Create config.env
      run: |
        echo "DB_DRIVER=${{ env.DB_DRIVER }}" >> cfg/config.env
        echo "DB_SOURCE=${{ secrets.DB_SOURCE }}" >> cfg/config.env
        echo "HTTP_SERVER_ADDRESS=${{ env.HTTP_SERVER_ADDRESS }}" >> cfg/config.env

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate

    - name: Run migrations
      run: make migrate_up

    - name: Test
      run: make test
