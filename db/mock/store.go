// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/YuanData/SharedBoard/db/sqlc (interfaces: Store)

// Package mock_sqlc is a generated GoMock package.
package mock_sqlc

import (
	context "context"
	reflect "reflect"

	db "github.com/YuanData/SharedBoard/db/sqlc"
	gomock "github.com/golang/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// CreateSharedlink mocks base method.
func (m *MockStore) CreateSharedlink(arg0 context.Context, arg1 db.CreateSharedlinkParams) (db.Sharedlink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSharedlink", arg0, arg1)
	ret0, _ := ret[0].(db.Sharedlink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSharedlink indicates an expected call of CreateSharedlink.
func (mr *MockStoreMockRecorder) CreateSharedlink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSharedlink", reflect.TypeOf((*MockStore)(nil).CreateSharedlink), arg0, arg1)
}

// DeleteSharedlink mocks base method.
func (m *MockStore) DeleteSharedlink(arg0 context.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSharedlink", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSharedlink indicates an expected call of DeleteSharedlink.
func (mr *MockStoreMockRecorder) DeleteSharedlink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSharedlink", reflect.TypeOf((*MockStore)(nil).DeleteSharedlink), arg0, arg1)
}

// GetSharedlink mocks base method.
func (m *MockStore) GetSharedlink(arg0 context.Context, arg1 int64) (db.Sharedlink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSharedlink", arg0, arg1)
	ret0, _ := ret[0].(db.Sharedlink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSharedlink indicates an expected call of GetSharedlink.
func (mr *MockStoreMockRecorder) GetSharedlink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSharedlink", reflect.TypeOf((*MockStore)(nil).GetSharedlink), arg0, arg1)
}

// ListSharedlink mocks base method.
func (m *MockStore) ListSharedlink(arg0 context.Context, arg1 db.ListSharedlinkParams) ([]db.Sharedlink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSharedlink", arg0, arg1)
	ret0, _ := ret[0].([]db.Sharedlink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSharedlink indicates an expected call of ListSharedlink.
func (mr *MockStoreMockRecorder) ListSharedlink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSharedlink", reflect.TypeOf((*MockStore)(nil).ListSharedlink), arg0, arg1)
}

// UpdateSharedlink mocks base method.
func (m *MockStore) UpdateSharedlink(arg0 context.Context, arg1 db.UpdateSharedlinkParams) (db.Sharedlink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSharedlink", arg0, arg1)
	ret0, _ := ret[0].(db.Sharedlink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateSharedlink indicates an expected call of UpdateSharedlink.
func (mr *MockStoreMockRecorder) UpdateSharedlink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSharedlink", reflect.TypeOf((*MockStore)(nil).UpdateSharedlink), arg0, arg1)
}
